<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIAB6BAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAwAAAAMAgGAAAAVwL5hwAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAED0lEQVRoQ+2Za0gU
        URTHz66urm8zy0dE0rsgjIweBBkRFZQhQhElQgV9LKgPUaJFUdDjS30I6lNBFEQEFoK9oKAsrcToQW+U
        MjRdXd31sbvu2v3P3MF9zKyzM6NbtD8YuGfZ3bn/e8+5Z84ZExGNsOufxXABZTOttCo3gWalx9PsjDiK
        NxN97fXSJ/swve700PUvg/ybxmCYgOU5Fjq9Il2YfDje2Dx06LmDHrW5+Cf6METAjjlJdHVtJrfUcfSl
        g041ObmlHd0CsPIPSyaTNQ5/pZ5hH1FpXTfd+6FvJ5iH6gMrH+nkAWLjSoS7JocuAbnJZiFYtZJtNVPh
        ZAu3tKFLwOq8RD7STnF++KAfC10C5k/SvvoSmYn6vFjfr/8CYgKiTUxAtIkJiDYxAdEmJiDaxAREm/9b
        wLtuDx9px+5itaUOZGtiFBnF+aPFSnOXh+60DHFrlMwEM3XuyuGWNpbe6hI6FcGonYOsgN3zk+lScQa3
        iJ61u2lNjY1bgbwoy6aiKdrKwq4hH+Vd7eBWIKi10e2QOPHaScdfObg1iqwLtfV7+UgEdSuKcDn2PLaT
        0xN5YwNdifKHdm6FErwoP52Bc5KQndZH+zAfiaRaTAGr4c/77mEqf9TDLfXsf9ar2NyC+8zLDCxX0dmT
        Q1ZAq8NLT365uSVyZEmq4i7UtroEX1bTbcP/rrtro8sfBvgnoVQVpfGRCOYDN5Yjjl3HxGEg8WYTlRRY
        uUWUxYrvdBa09xUaUR2DPrr2eZDq2z30m427XSNCcNmYn9ezm9ewAKxscNDJJqcwISX2LUqhvQuTuSVy
        8f0APQ5aUAnFzhxWu3nrlJCt3Mn89uY3Yxu0Euirosvnv9MI9AU3Osnulj9uFZxCDDIEaDA4HbBKRoOu
        dt3mrBA3xa4pTR4ouhBo6/eRNd4U0HFmnkUbpifS4mwLCyyv4Dp6QGfv3Mp0OrY0jRKCWpS3vzO3aww9
        Ov1RdCF/kBOQG+RAv//4Kyd965M/JZRAW/IwOxj2LkiRPRwQ7BtrbYInhEOVANzg/KqMkOCSwE0QFziN
        Gn67FYMUk142NUHYwYp5SYpNYXSstz/oUZVfVAmQ2DYrSdgN5IVwtA/4yOUdoZ8sIUJcQZr4pmZaCjxW
        GXwX7w3ONKt/bxCRADCDTaaandNYQSOBy1Q29lFDR2QPiBELkMDjxYHCFNrCcsVYO6IEVhzJ7yxb8eDE
        qRbNAiTgx+uZT2+akSiIQt4IJwiPBLgQL3i6xDmvB90C5MBrp6el2dwSufC2XzjTh1hsGIliItMDgjiY
        XveI4ZMH4yJgIvnnBeiKARylFXNDkxsCG3HgD5Jbi0yCQzl5sL6PW5GjS0A1e36pKkrlljak+kArsRiI
        NuOSByYOoj8F03Jzcw2NAQAAAABJRU5ErkJggg==
</value>
  </data>
</root>